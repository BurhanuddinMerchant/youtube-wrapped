import Head from 'next/head'
import Link from 'next/link'
import { useRouter } from 'next/router'
import { useState, useEffect } from 'react'
export default function Login() {
  const router = useRouter()
  const [formData, setFormData] = useState({ username: '', password: '' })
  const [isLoading, setLoading] = useState(false)
  useEffect(() => {
    if (
      sessionStorage.getItem('token') &&
      sessionStorage.getItem('token') !== undefined
    ) {
      router.push('/dashboard')
    }
  }, [])
  const handleChange = (e) => {
    setFormData({ ...formData, [e.target.name]: e.target.value })
  }
  const handleSubmit = (e) => {
    setLoading(true)
    e.preventDefault()

    var myHeaders = new Headers()
    myHeaders.append('Content-Type', 'application/json')

    var raw = JSON.stringify(formData)

    var requestOptions = {
      method: 'POST',
      headers: myHeaders,
      body: raw,
      redirect: 'follow',
    }

    fetch(
      `${process.env.NEXT_PUBLIC_SERVER_BASE_URL}/api/login`,
      requestOptions
    )
      .then((response) => response.text())
      .then((result) => {
        result = JSON.parse(result)
        if (result.token) {
          sessionStorage.setItem('token', result.token)
          setFormData(() => ({ ...formData, username: '', password: '' }))
          router.push('/dashboard')
        } else {
          throw result
        }
        setLoading(false)
      })
      .catch((error) => {
        setLoading(false)
        setFormData({ ...formData, username: '', password: '' })
      })
  }
  return (
    <>
      <Head>
        <title>Login</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className=" container my-40 mx-auto w-1/3 bg-gray-200 p-10 hover:bg-red-100">
        <div className=" text-center">
          <h2 className=" mx-auto cursor-pointer text-xl font-semibold text-red-400">
            Login
          </h2>
        </div>
        <form className=" flex flex-col " onSubmit={handleSubmit}>
          <input
            type="text"
            placeholder="Enter Username"
            className="m-auto my-1 w-fit rounded-sm border-2 border-gray-300 p-1 hover:border-red-300 focus:border-red-400"
            name="username"
            required
            onChange={handleChange}
            value={formData.username}
          />
          <input
            type="password"
            placeholder="Enter Password"
            minLength={6}
            className="m-auto w-fit rounded-md border-2 border-gray-300 p-1 hover:border-red-300 focus:border-red-400"
            name="password"
            required
            onChange={handleChange}
            value={formData.password}
          />
          <p className="mx-auto my-2 text-sm">
            Don't have an account yet?{' '}
            <Link href="/signup" className="cursor-pointer text-red-400">
              <section className="inline cursor-pointer font-medium text-red-500">
                Register Here
              </section>
            </Link>
          </p>
          {isLoading ? (
            <p className=" mx-auto my-2 w-fit animate-bounce cursor-pointer rounded-md  bg-red-600 px-2 py-1 text-red-100">
              Loading...
            </p>
          ) : (
            <button
              type="submit"
              className=" mx-auto my-2 w-fit cursor-pointer  rounded-md bg-white px-2 py-1 hover:bg-red-600 hover:text-red-100"
            >
              Login
            </button>
          )}
        </form>
      </div>
    </>
  )
}
